name: Publish Docker image to AWS ECR

on:
  workflow_call:
    inputs:
      IMAGE_NAME:
        description: 'Name of image'
        required: true
        type: string
      IMAGE_TAG:
        description: 'Tag name'
        required: true
        type: string
    secrets:
      AWS_REGION:
        description: 'AWS region e.g. eu-west-2'
        required: true
      AWS_ECR:
        description: 'AWS ECR name e.g. public.ecr.aws/12345abc'
        required: true
      AWS_ACCOUNT_ID:
        description: 'AWS account ID e.g. 1234567890'
        required: true

#  push:
#    tags:
#      - 'v[0-9]+'
#      - 'v[0-9]+-*'
#      - 'v[0-9]+.[0-9]+'
#      - 'v[0-9]+.[0-9]+-*'
#      - 'v[0-9]+.[0-9]+.[0-9]+'
#      - 'v[0-9]+.[0-9]+.[0-9]+-*'
#    branches:
#      - '**'

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-container-registry
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: ${{ inputs.AWS_ACCOUNT_ID }}
          mask-password: "true" # see: https://github.com/aws-actions/amazon-ecr-login#docker-credentials

      - name: Docker login
        id: docker-login
        shell: bash
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR }}

        # This will cache Docker layers.
        # We could also cache the cache mounts used in the Dockerfile but do not,
        # see https://docs.docker.com/build/ci/github-actions/cache/
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.AWS_ECR }}/${{ inputs.IMAGE_NAME }}:${{ inputs.IMAGE_TAG }}
          build-args: |
            GIT_REF_NAME=${{ github.ref_name }}
            GIT_SHA=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
