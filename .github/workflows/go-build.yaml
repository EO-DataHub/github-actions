name: Go-Build
on:
  workflow_call:
    inputs:
      go-version:
        description: "Go version"
        required: false
        type: string
        default: "1.22"
      golangci-lint-version:
        description: "GolangCI Lint version"
        required: false
        type: string
        default: "v1.61"
      coverage-threshold-file:
        description: "Coverage threshold for a single file"
        required: false
        type: number
        default: 80
      coverage-threshold-package:
        description: "Coverage threshold for a package"
        required: false
        type: number
        default: 80
      coverage-threshold-total:
        description: "Coverage threshold for the total coverage"
        required: false
        type: number
        default: 95
permissions:
  contents: read
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ inputs.golangci-lint-version }}
  test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}
      - name: Install dependencies
        run: |
          go mod download
          go install github.com/ctrf-io/go-ctrf-json-reporter/cmd/go-ctrf-json-reporter@latest
      - name: Test with Go (with coverage report)
        id: test
        run: go test -coverprofile cover.out -json ./... | tee test.out
      - name: Display test results
        run: |
          cat test.out | go-ctrf-json-reporter -output ctrf-report.json
          npx github-actions-ctrf ctrf-report.json
      - uses: actions/upload-artifact@v4
        with:
          name: cover.out
          path: cover.out
      - name: Check test results
        run: |
          cat ctrf-report.json | jq '.results.summary' > summary.json
          cat summary.json
          if [ $(jq '.failed' summary.json) -gt 0 ]; then
            echo "Tests failed"
            exit 1
          else
            echo "Tests passed"
          fi
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: cover.out
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: cover.out
      - name: Check test coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          profile: cover.out
          local-prefix: github.com/org/project
          threshold-file: ${{ inputs.coverage-threshold-file }}
          threshold-package: ${{ inputs.coverage-threshold-package }}
          threshold-total: ${{ inputs.coverage-threshold-total }}
